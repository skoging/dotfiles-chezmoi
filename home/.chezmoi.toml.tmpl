{{/* boolean feature tags */}}
{{- $ephemeral := false -}}{{/* true if this machine is ephemeral, e.g. a cloud or VM instance */}}
{{- $work := false -}}{{/* true if this machine is a work machine */}}
{{- $isClient := true -}}{{/* true if this machine is a client machine */}}
{{- $client := "" -}}{{/* name of the clint this machine belongs to */}}
{{- $headless := false -}}{{/* true if this machine does not have a screen and keyboard */}}
{{- $personal := false -}}{{/* true if this machine should have personal secrets */}}
{{- $wsl := false -}}{{/* true if this is running in windows subsystem for linux */}}
{{- "" -}}

{{- $osID := .chezmoi.os -}}
{{- if (and (eq .chezmoi.os "linux") (hasKey .chezmoi.osRelease "id")) -}}
{{-   $osID = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{- end -}}

{{- if eq .chezmoi.os "linux" -}}
{{-   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") -}}
{{-     $wsl = true -}}
{{-     $headless = true -}}
{{-   end -}}
{{- end -}}

{{/* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */}}
{{- if or (env "CODESPACES") (env "REMOTE_CONTAINERS_IPC") (eq .chezmoi.username "root" "ubuntu" "vagrant" "vscode") -}}
{{-   $ephemeral = true -}}
{{-   $headless = true -}}
{{-   $wsl = false -}}
{{- end -}}

{{/* work around unreliable hostname on darwin */}}
{{- $hostname := .chezmoi.hostname -}}
{{- if eq .chezmoi.os "darwin" -}}
{{-   $hostname := output "scutil" "--get" "LocalHostName" | trim -}}
{{- end -}}

{{- if eq .chezmoi.os "windows" -}}
{{-   $ephemeral = true -}}
{{- end -}}

{{- if not $ephemeral -}}
{{-   if stdinIsATTY -}}
{{-     $headless = promptBoolOnce . "headless" "headless" -}}
{{-     $ephemeral = promptBoolOnce . "ephemeral" "ephemeral" -}}
{{-   else -}}
{{-     $ephemeral = true -}}
{{-     $headless = true -}}
{{-   end -}}
{{- end -}}


{{- if (env "CODESPACES") -}}
{{-   $personal = true -}}
{{-   $work = true -}}
{{-   $client = regexFind "^[^/]+" (env "GITHUB_REPOSITORY") -}}
{{- else if hasPrefix $hostname "EQDEV" -}}
{{-   $personal = true -}}
{{-   $work = true -}}
{{-   $client = "equinor" -}}
{{- else if eq $hostname "MacBook Pro 16" -}}
{{-   $personal = true -}}
{{-   $work = true -}}
{{-   $isClient = false -}}
{{- else if stdinIsATTY -}}
{{-   $personal = promptBoolOnce . "personalFinal" "Is this a personal machine (not shared)" true -}}
{{-   $work = promptBoolOnce . "workFinal" "Is this a work machine" true -}}
{{-   if $work -}}
{{-     $isClient = promptBoolOnce . "isClient" "Is this a client machine" true -}}
{{-   else -}}
{{-     $isClient = false -}}
{{-   end -}}
{{-   if $isClient -}}
{{-     $client = promptStringOnce . "finalClient" "'client' - What client name should be used to fetch secrets and config from 1password" "" -}}
{{-   end -}}
{{- else -}}
{{-   writeToStdout "Could not detect machine type automatically. Please run 'chezmoi init' from the console to configure properly" -}}
{{- end -}}

{{- $onepasswordEnabled := false -}}
{{- if stdinIsATTY -}}
{{-   $onepasswordEnabled = true -}}
{{- else if (env "OP_SERVICE_ACCOUNT_TOKEN") -}}
{{-   $onepasswordEnabled = true -}}
{{- end -}}

{{- $onepasswordNotes := "Unknown Machine" -}}
{{- if and $work (ne $client "")  -}}
{{-   $onepasswordNotes = cat "Work Machine -" $client -}}
{{- else if $work  -}}
{{-   $onepasswordNotes = "Work Machine" -}}
{{- else if $personal -}}
{{-   $onepasswordNotes = "Personal Machine" -}}
{{- end -}}

sourceDir = {{ .chezmoi.sourceDir | quote }}

[data]
    ephemeral = {{ $ephemeral }}
    work = {{ $work }}
    client = {{ $client | quote }}
    headless = {{ $headless }}
    hostname = {{ $hostname | quote }}
    personal = {{ $personal }}
    osid = {{ $osID | quote }}
    wsl = {{ $wsl }}
    onepasswordEnabled = {{ $onepasswordEnabled }}
    onepasswordNotes = {{ $onepasswordNotes | quote }}
    zshPlugins = [
        "per-directory-history",
        "zsh-syntax-highlighting",
    ]
    {{ if or (ne $client "") (not $isClient) -}}
    isClient = {{ $isClient }}
    finalClient = {{ $client | quote }}
    {{- end }}
    {{ if stdinIsATTY -}}
    personalFinal = {{ $personal }}
    workFinal = {{ $work }}
    {{- end }}


[github]
    refreshPeriod = "12h"

[onepassword]
    {{ if (env "OP_SERVICE_ACCOUNT_TOKEN") }}
    mode = "service"
    {{ else }}
    mode = "account"
    {{ end }}